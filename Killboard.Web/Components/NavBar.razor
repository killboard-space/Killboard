@using Domain.Interfaces
@inject IAPIService apiService;

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow mb-3">
    <div class="container">
        <a class="navbar-brand text-light" href="/index">killboard.space</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-light" href="/index">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-light" href="https://tools.killboard.space">Tools</a>
                </li>
            </ul>
            <div class="text-light">@DateTime.Now.ToUniversalTime().ToString("HH:mm") UTC&nbsp;&nbsp;</div>
            <div class="dropdown">
                <button id="profileDropdownBtn" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Username
                </button>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="/profile">Profile</a>
                    <a class="dropdown-item" href="/accounts">Accounts</a>
                    @if (CharacterList != null && CharacterList.Count > 0)
                    {
                            <a class="dropdown-item dropdown-toggle" data-toggle="dropdown">My Killboards</a>
                            <div class="dropdown-menu dropright">
                                @foreach (var ch in CharacterList)
                                {
                                    <a class="dropdown-item" href="/character/@ch.Key">@ch.Value</a>
                                }
                            </div>
                    }
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="/logoff">Sign Out</a>
                </div>
            </div>
            <div>


            </div>
        </div>
    </div>
</nav>
@code {
    [Parameter]
    public string UserID { get; set; }

    [Parameter]
    public string Username { get; set; }

    public Dictionary<int, string> CharacterList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(UserID != default)
        {
            CharacterList = await apiService.GetCharacterList(int.Parse(UserID));
        }
    }
}
