// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Killboard.Data.Models
{
    public partial class KillboardContext : DbContext
    {
        public KillboardContext()
        {
        }

        public KillboardContext(DbContextOptions<KillboardContext> options)
            : base(options)
        {
        }

        public virtual DbSet<access_tokens> access_tokens { get; set; }
        public virtual DbSet<alliances> alliances { get; set; }
        public virtual DbSet<ancestries> ancestries { get; set; }
        public virtual DbSet<asteroid_belts> asteroid_belts { get; set; }
        public virtual DbSet<attackers> attackers { get; set; }
        public virtual DbSet<bloodlines> bloodlines { get; set; }
        public virtual DbSet<categories> categories { get; set; }
        public virtual DbSet<character_scopes> character_scopes { get; set; }
        public virtual DbSet<characters> characters { get; set; }
        public virtual DbSet<constellations> constellations { get; set; }
        public virtual DbSet<corporations> corporations { get; set; }
        public virtual DbSet<dogma_attributes> dogma_attributes { get; set; }
        public virtual DbSet<dogma_effects> dogma_effects { get; set; }
        public virtual DbSet<dogma_modifiers> dogma_modifiers { get; set; }
        public virtual DbSet<dropped_items> dropped_items { get; set; }
        public virtual DbSet<factions> factions { get; set; }
        public virtual DbSet<flags> flags { get; set; }
        public virtual DbSet<groups> groups { get; set; }
        public virtual DbSet<item_attributes> item_attributes { get; set; }
        public virtual DbSet<item_effects> item_effects { get; set; }
        public virtual DbSet<items> items { get; set; }
        public virtual DbSet<killmails> killmails { get; set; }
        public virtual DbSet<moons> moons { get; set; }
        public virtual DbSet<planets> planets { get; set; }
        public virtual DbSet<positions> positions { get; set; }
        public virtual DbSet<races> races { get; set; }
        public virtual DbSet<regions> regions { get; set; }
        public virtual DbSet<reset_requests> reset_requests { get; set; }
        public virtual DbSet<scopes> scopes { get; set; }
        public virtual DbSet<stargates> stargates { get; set; }
        public virtual DbSet<stars> stars { get; set; }
        public virtual DbSet<stations> stations { get; set; }
        public virtual DbSet<systems> systems { get; set; }
        public virtual DbSet<users> users { get; set; }
        public virtual DbSet<victims> victims { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<access_tokens>(entity =>
            {
                entity.Property(e => e.access_token)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.date_added).HasColumnType("datetime");

                entity.Property(e => e.expires_on).HasColumnType("datetime");

                entity.Property(e => e.refresh_token)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.HasOne(d => d._char)
                    .WithMany(p => p.access_tokens)
                    .HasForeignKey(d => d.char_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_access_tokens_char_id");
            });

            modelBuilder.Entity<alliances>(entity =>
            {
                entity.HasKey(e => e.alliance_id)
                    .HasName("PK_alliances_alliance_id");

                entity.Property(e => e.alliance_id).ValueGeneratedNever();

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.ticker)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ancestries>(entity =>
            {
                entity.HasKey(e => e.ancestry_id)
                    .HasName("PK__ancestri__E7756E43BBFDD055");

                entity.Property(e => e.ancestry_id).ValueGeneratedNever();

                entity.Property(e => e.description).IsRequired();

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.short_description)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.HasOne(d => d.bloodline)
                    .WithMany(p => p.ancestries)
                    .HasForeignKey(d => d.bloodline_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ancestrie__blood__797309D9");
            });

            modelBuilder.Entity<asteroid_belts>(entity =>
            {
                entity.HasKey(e => e.belt_id)
                    .HasName("PK__asteroid__5373B3DFEC9FAD21");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.planet)
                    .WithMany(p => p.asteroid_belts)
                    .HasForeignKey(d => d.planet_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__asteroid___plane__7A672E12");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.asteroid_belts)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__asteroid___posit__7B5B524B");
            });

            modelBuilder.Entity<attackers>(entity =>
            {
                entity.HasKey(e => e.attacker_id)
                    .HasName("PK__attacker__6F3A32BE0397E8F6");

                entity.HasOne(d => d.alliance)
                    .WithMany(p => p.attackers)
                    .HasForeignKey(d => d.alliance_id)
                    .HasConstraintName("FK__attackers__allia__46B27FE2");

                entity.HasOne(d => d.corporation)
                    .WithMany(p => p.attackers)
                    .HasForeignKey(d => d.corporation_id)
                    .HasConstraintName("FK__attackers__corpo__47A6A41B");

                entity.HasOne(d => d.killmail)
                    .WithMany(p => p.attackers)
                    .HasForeignKey(d => d.killmail_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_attackers_killmail_id");

                entity.HasOne(d => d.ship_type)
                    .WithMany(p => p.attackersship_type)
                    .HasForeignKey(d => d.ship_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__attackers__ship___7C4F7684");

                entity.HasOne(d => d.weapon_type)
                    .WithMany(p => p.attackersweapon_type)
                    .HasForeignKey(d => d.weapon_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__attackers__weapo__7D439ABD");
            });

            modelBuilder.Entity<bloodlines>(entity =>
            {
                entity.HasKey(e => e.bloodline_id)
                    .HasName("PK__bloodlin__7066D8F26155701F");

                entity.Property(e => e.description).IsRequired();

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.corporation)
                    .WithMany(p => p.bloodlines)
                    .HasForeignKey(d => d.corporation_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bloodlines_corporation_id");

                entity.HasOne(d => d.ship_type)
                    .WithMany(p => p.bloodlines)
                    .HasForeignKey(d => d.ship_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__bloodline__ship___7F2BE32F");
            });

            modelBuilder.Entity<categories>(entity =>
            {
                entity.HasKey(e => e.category_id)
                    .HasName("PK__categori__D54EE9B451458F8B");

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.published).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<character_scopes>(entity =>
            {
                entity.HasKey(e => new { e.char_id, e.scope_id })
                    .HasName("PK__characte__6A2F633D9489ED0C");

                entity.HasOne(d => d._char)
                    .WithMany(p => p.character_scopes)
                    .HasForeignKey(d => d.char_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_character_scopes_char_id");

                entity.HasOne(d => d.scope)
                    .WithMany(p => p.character_scopes)
                    .HasForeignKey(d => d.scope_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__character__scope__01142BA1");
            });

            modelBuilder.Entity<characters>(entity =>
            {
                entity.HasKey(e => e.character_id)
                    .HasName("PK_characters_character_id");

                entity.Property(e => e.character_id).ValueGeneratedNever();

                entity.Property(e => e.birthday).HasColumnType("datetime");

                entity.Property(e => e.gender)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(45);

                entity.HasOne(d => d.alliance)
                    .WithMany(p => p.characters)
                    .HasForeignKey(d => d.alliance_id)
                    .HasConstraintName("FK_characters_alliance_id");

                entity.HasOne(d => d.corporation)
                    .WithMany(p => p.characters)
                    .HasForeignKey(d => d.corporation_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_characters_corporation_id");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.characters)
                    .HasForeignKey(d => d.user_id)
                    .HasConstraintName("FK__character__user___02FC7413");
            });

            modelBuilder.Entity<constellations>(entity =>
            {
                entity.HasKey(e => e.constellation_id)
                    .HasName("PK__constell__BC10C39AB7DB9EFB");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.position)
                    .WithMany(p => p.constellations)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__constella__posit__06CD04F7");

                entity.HasOne(d => d.region)
                    .WithMany(p => p.constellations)
                    .HasForeignKey(d => d.region_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__constella__regio__05D8E0BE");
            });

            modelBuilder.Entity<corporations>(entity =>
            {
                entity.HasKey(e => e.corporation_id)
                    .HasName("PK_corporations_corporation_id");

                entity.Property(e => e.corporation_id).ValueGeneratedNever();

                entity.Property(e => e.create_time).HasColumnType("datetime");

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.tax_rate).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ticker)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.url).HasMaxLength(240);

                entity.HasOne(d => d.alliance)
                    .WithMany(p => p.corporations)
                    .HasForeignKey(d => d.alliance_id)
                    .HasConstraintName("FK_corporations_alliance_id");
            });

            modelBuilder.Entity<dogma_attributes>(entity =>
            {
                entity.HasKey(e => e.attribute_id)
                    .HasName("PK_dogma_attributes_attribute_id");

                entity.Property(e => e.attribute_id).ValueGeneratedNever();

                entity.Property(e => e.display_name).HasMaxLength(500);

                entity.Property(e => e.name).HasMaxLength(500);
            });

            modelBuilder.Entity<dogma_effects>(entity =>
            {
                entity.HasKey(e => e.effect_id)
                    .HasName("PK_dogma_effects_effect_id");

                entity.Property(e => e.effect_id).ValueGeneratedNever();

                entity.Property(e => e.description).HasMaxLength(500);

                entity.Property(e => e.display_name).HasMaxLength(500);

                entity.Property(e => e.name).HasMaxLength(500);
            });

            modelBuilder.Entity<dogma_modifiers>(entity =>
            {
                entity.HasKey(e => new { e.ref_effect_id, e.id })
                    .HasName("PK_dogma_modifiers_ref_effect_id_id");

                entity.Property(e => e.id).ValueGeneratedOnAdd();

                entity.Property(e => e._operator).HasColumnName("operator");

                entity.Property(e => e.domain).HasMaxLength(500);

                entity.Property(e => e.func).HasMaxLength(500);

                entity.HasOne(d => d.ref_effect)
                    .WithMany(p => p.dogma_modifiers)
                    .HasForeignKey(d => d.ref_effect_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dogma_modifiers_ref_effect_id");
            });

            modelBuilder.Entity<dropped_items>(entity =>
            {
                entity.HasNoKey();

                entity.HasOne(d => d.item_type)
                    .WithMany()
                    .HasForeignKey(d => d.item_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dropped_i__item___09A971A2");

                entity.HasOne(d => d.killmail)
                    .WithMany()
                    .HasForeignKey(d => d.killmail_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dropped_items_killmail_id");
            });

            modelBuilder.Entity<factions>(entity =>
            {
                entity.HasKey(e => e.faction_id)
                    .HasName("PK__factions__FCC09831F55280B0");

                entity.Property(e => e.description).IsRequired();

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.corporation)
                    .WithMany(p => p.factions)
                    .HasForeignKey(d => d.corporation_id)
                    .HasConstraintName("FK_factions_corporation_id");

                entity.HasOne(d => d.system)
                    .WithMany(p => p.factions)
                    .HasForeignKey(d => d.system_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__factions__system__0B91BA14");
            });

            modelBuilder.Entity<flags>(entity =>
            {
                entity.HasKey(e => e.flag_id)
                    .HasName("PK__flags__E8E91D3B13F94960");

                entity.Property(e => e.name).IsRequired();
            });

            modelBuilder.Entity<groups>(entity =>
            {
                entity.HasKey(e => e.group_id)
                    .HasName("PK__groups__D57795A078894EB1");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.category)
                    .WithMany(p => p.groups)
                    .HasForeignKey(d => d.category_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__groups__category__0D7A0286");
            });

            modelBuilder.Entity<item_attributes>(entity =>
            {
                entity.HasKey(e => new { e.attribute_id, e.type_id });

                entity.HasOne(d => d.attribute)
                    .WithMany(p => p.item_attributes)
                    .HasForeignKey(d => d.attribute_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__item_attr__attri__74794A92");

                entity.HasOne(d => d.type)
                    .WithMany(p => p.item_attributes)
                    .HasForeignKey(d => d.type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__item_attr__type___793DFFAF");
            });

            modelBuilder.Entity<item_effects>(entity =>
            {
                entity.HasKey(e => new { e.effect_id, e.type_id });

                entity.HasOne(d => d.effect)
                    .WithMany(p => p.item_effects)
                    .HasForeignKey(d => d.effect_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__item_effe__effec__76619304");

                entity.HasOne(d => d.type)
                    .WithMany(p => p.item_effects)
                    .HasForeignKey(d => d.type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__item_effe__type___7849DB76");
            });

            modelBuilder.Entity<items>(entity =>
            {
                entity.HasKey(e => e.type_id)
                    .HasName("PK__items__2C000598D7D89F36");

                entity.Property(e => e.description).IsRequired();

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.group)
                    .WithMany(p => p.items)
                    .HasForeignKey(d => d.group_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__items__group_id__0E6E26BF");
            });

            modelBuilder.Entity<killmails>(entity =>
            {
                entity.HasKey(e => e.killmail_id)
                    .HasName("PK__killmail__53BE6CD53A14F1D7");

                entity.Property(e => e.killmail_id).ValueGeneratedNever();

                entity.Property(e => e.date_added).HasColumnType("datetime");

                entity.Property(e => e.finished_processing).HasColumnType("datetime");

                entity.Property(e => e.hash).IsRequired();

                entity.Property(e => e.killmail_time).HasColumnType("datetime");

                entity.Property(e => e.started_processing).HasColumnType("datetime");

                entity.HasOne(d => d.system)
                    .WithMany(p => p.killmails)
                    .HasForeignKey(d => d.system_id)
                    .HasConstraintName("FK_killmails_system_id_systems_system_id");
            });

            modelBuilder.Entity<moons>(entity =>
            {
                entity.HasKey(e => e.moon_id)
                    .HasName("PK__moons__848C71A92979D38C");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.planet)
                    .WithMany(p => p.moons)
                    .HasForeignKey(d => d.planet_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__moons__planet_id__10566F31");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.moons)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__moons__position___114A936A");
            });

            modelBuilder.Entity<planets>(entity =>
            {
                entity.HasKey(e => e.planet_id)
                    .HasName("PK__planets__07D86787B750E5FE");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.item_type)
                    .WithMany(p => p.planets)
                    .HasForeignKey(d => d.item_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__planets__item_ty__1332DBDC");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.planets)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__planets__positio__14270015");

                entity.HasOne(d => d.system)
                    .WithMany(p => p.planets)
                    .HasForeignKey(d => d.system_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__planets__system___123EB7A3");
            });

            modelBuilder.Entity<positions>(entity =>
            {
                entity.HasKey(e => e.position_id)
                    .HasName("PK__position__99A0E7A4D779A56D");
            });

            modelBuilder.Entity<races>(entity =>
            {
                entity.HasKey(e => e.race_id)
                    .HasName("PK__races__1C8FE2F9680EE201");

                entity.Property(e => e.name).IsRequired();
            });

            modelBuilder.Entity<regions>(entity =>
            {
                entity.HasKey(e => e.region_id)
                    .HasName("PK__regions__01146BAEFB5A3012");

                entity.Property(e => e.description).IsRequired();

                entity.Property(e => e.name).IsRequired();
            });

            modelBuilder.Entity<reset_requests>(entity =>
            {
                entity.HasKey(e => e.request_id)
                    .HasName("PK__reset_re__18D3B90F42D656DC");

                entity.Property(e => e.request_id).ValueGeneratedNever();

                entity.Property(e => e.create_time).HasColumnType("datetime");

                entity.Property(e => e.expire_time).HasColumnType("datetime");

                entity.Property(e => e.hash).IsRequired();

                entity.HasOne(d => d.user)
                    .WithMany(p => p.reset_requests)
                    .HasForeignKey(d => d.user_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__reset_req__user___151B244E");
            });

            modelBuilder.Entity<scopes>(entity =>
            {
                entity.HasKey(e => e.scope_id)
                    .HasName("PK__scopes__76440045A239F90E");

                entity.Property(e => e.description)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.full_name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.scope_name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<stargates>(entity =>
            {
                entity.HasKey(e => e.stargate_id)
                    .HasName("PK__stargate__015CDF6A59A186D4");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.destination_stargate)
                    .WithMany(p => p.Inversedestination_stargate)
                    .HasForeignKey(d => d.destination_stargate_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stargates__desti__160F4887");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.stargates)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stargates__posit__18EBB532");

                entity.HasOne(d => d.system)
                    .WithMany(p => p.stargates)
                    .HasForeignKey(d => d.system_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stargates__syste__17036CC0");

                entity.HasOne(d => d.type)
                    .WithMany(p => p.stargates)
                    .HasForeignKey(d => d.type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stargates__type___17F790F9");
            });

            modelBuilder.Entity<stars>(entity =>
            {
                entity.HasKey(e => e.star_id)
                    .HasName("PK__stars__88222DCE4F4B2A0D");

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.spectral_class)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.system)
                    .WithMany(p => p.stars)
                    .HasForeignKey(d => d.system_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stars__system_id__19DFD96B");

                entity.HasOne(d => d.type)
                    .WithMany(p => p.stars)
                    .HasForeignKey(d => d.type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stars__type_id__1AD3FDA4");
            });

            modelBuilder.Entity<stations>(entity =>
            {
                entity.HasKey(e => e.station_id)
                    .HasName("PK__stations__44B370E997AAFABC");

                entity.Property(e => e.name).IsRequired();

                entity.HasOne(d => d.system)
                    .WithMany(p => p.stations)
                    .HasForeignKey(d => d.system_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__stations__system__1BC821DD");
            });

            modelBuilder.Entity<systems>(entity =>
            {
                entity.HasKey(e => e.system_id)
                    .HasName("PK__systems__7C45FE7FC21E04D0");

                entity.Property(e => e.name).IsRequired();

                entity.Property(e => e.security_class)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.constellation)
                    .WithMany(p => p.systems)
                    .HasForeignKey(d => d.constellation_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__systems__constel__1CBC4616");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.systems)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__systems__positio__1DB06A4F");
            });

            modelBuilder.Entity<users>(entity =>
            {
                entity.HasKey(e => e.user_id)
                    .HasName("PK__users__B9BE370F48B9EF6F");

                entity.Property(e => e.create_ip)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.create_time).HasColumnType("datetime");

                entity.Property(e => e.email).HasMaxLength(300);

                entity.Property(e => e.hash).IsRequired();

                entity.Property(e => e.modified_ip)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.modified_time).HasColumnType("datetime");

                entity.Property(e => e.salt)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsFixedLength(true);

                entity.Property(e => e.username)
                    .IsRequired()
                    .HasMaxLength(120);
            });

            modelBuilder.Entity<victims>(entity =>
            {
                entity.HasKey(e => e.victim_id)
                    .HasName("PK__victims__9D9253B3BB61E19D");

                entity.HasOne(d => d.alliance)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.alliance_id)
                    .HasConstraintName("FK__victims__allianc__44CA3770");

                entity.HasOne(d => d._char)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.char_id)
                    .HasConstraintName("FK_victims_char_id");

                entity.HasOne(d => d.corporation)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.corporation_id)
                    .HasConstraintName("FK__victims__corpora__45BE5BA9");

                entity.HasOne(d => d.faction)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.faction_id)
                    .HasConstraintName("FK__victims__faction__1EA48E88");

                entity.HasOne(d => d.killmail)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.killmail_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_victims_killmail_id");

                entity.HasOne(d => d.position)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.position_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__victims__positio__1F98B2C1");

                entity.HasOne(d => d.ship_type)
                    .WithMany(p => p.victims)
                    .HasForeignKey(d => d.ship_type_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__victims__ship_ty__208CD6FA");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}